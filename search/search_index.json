{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#home-page","title":"Home Page","text":"<p>This project, developed for the ASU EGR314 Embedded Systems course by third-year engineering students, is an interactive web-enabled educational tool designed to teach K\u20138 students a scientific concept through physical demonstration. The system captures the pitch of a child\u2019s voice using a microphone sensor, calculates the corresponding sound wavelength, and then recreates that wavelength in real-time using stepper motors to modulate string tension. A visual graph of the wave is also displayed to reinforce the concept. The system integrates key technologies such as MQTT communication, stepper motor control, and sensor data processing, fulfilling all course requirements while delivering a hands-on, engaging learning experience.</p> <p>Requirements</p> <ol> <li>Project name: String Project</li> <li>Team number: 203</li> <li>Team members: Brendan Keeter, Carter Oneill,  Zack Gald</li> <li>Preparation date: 4/30/2025</li> <li>Semester and year: Spring 2025</li> <li>University, class, professor: ASU EGR 314 Aukes</li> </ol>"},{"location":"#final-photo","title":"Final Photo","text":""},{"location":"#individuals-websites","title":"Individuals Websites","text":"<p>Zack's  Zack's webpage</p> <p>Brendan's Brendans Webpage</p> <p>Carter's Carter's Webpage</p>"},{"location":"API/","title":"API","text":"<p>This page is to show messages and message types between team members</p> <p>Overall Example code: [AZ][SENDERID][RECEIVERID][MESSAGETYPE][VALUE][YB]</p>"},{"location":"API/#parts","title":"Parts","text":"<p>[AZ]: This is the start of the message. This tells the the controller to start reading the message, all messages needs this to be read. </p> <p>[SENDERID]: This helps others see who sent the message. </p> Teammates SENDER ID Zack Z Brendan B Carter C Sivannee S <p>[RECEIVERID]: This helps others see who needs to receive the message. </p> Teammates RECEIVER ID Zack Z Brendan B Carter C Sivannee S <p>[Message type]: Shows what the value is going to be for.</p> Message Types Values Motor Freq 1 Wavelength 2 Motor on/off 3 NA 4 <p>[Value]: Shows the value for the message type that is sending through (Values are based what the message type is</p> Message Types Values Motor Freq 90-800 Wavelength all positive values Motor on/off 0-1 NA 4"},{"location":"API/#examples","title":"Examples","text":"<p>1) AZCZ1500YB (Carter is sending Zack motor freq of 500)</p>"},{"location":"Appendix/","title":"Appendix","text":""},{"location":"Appendix/#apendix","title":"Apendix","text":""},{"location":"Appendix/#goals","title":"Goals:","text":"<ol> <li> <p>Develop a functional device that proves a scientific theory.</p> </li> <li> <p>Create a product that exemplifies engineering expertise for future career opportunities.</p> </li> <li> <p>Ensure the design is accessible, reliable, and aligns with professional standards.</p> </li> <li> <p>Enhance teamwork and professional connections through collaborative effort.</p> </li> <li> <p>Build a portfolio-worthy project that integrates technical and creative problem-solving.</p> </li> </ol>"},{"location":"Appendix/#steps-taken","title":"Steps Taken:","text":"<ol> <li> <p>Conducted brainstorming sessions to identify shared goals and align personal objectives.</p> </li> <li> <p>Focused discussions on metrics of success beyond academic grading.</p> </li> <li> <p>Established a charter and mission statement that reflect our collective vision and the project\u2019s purpose.</p> </li> </ol>"},{"location":"Ideation_and_Concept/","title":"Ideation and Concept","text":""},{"location":"Ideation_and_Concept/#team-ideation-and-concept-generation","title":"Team Ideation and Concept Generation","text":""},{"location":"Ideation_and_Concept/#goal-of-our-exhibit","title":"Goal of our exhibit:","text":"<p>For our teams project, our goal is to be able to demonstrate a concept. We want to be able to do something that allows people to see things that are either too small or not visible in a way that is physically observable. We have liked the ideas of things such as magnetic fields, the light spectrum, and sound waves, all of which are things that are always around us in daily life, however they are not seen or thought of much. We want our project to be something that is interactive as well. so it involves button pressed or sound recognition.</p>"},{"location":"Ideation_and_Concept/#audience-for-our-exhibit","title":"Audience for our exhibit:","text":"<p>Our intended user for this project is K-12 students. We want to help them to be able to have a better understanding and interest in things such as science, technology, engineering, or math skills. The goal is for audience to not need to have a lot of previous knowledge on our subject as we want to create a project that can help teach both basics, but still be interesting to those with prior knowledge.</p>"},{"location":"Ideation_and_Concept/#team-brainstorm-phases","title":"Team brainstorm phases:","text":"<p>Updated ** Questions that were considered during brainstorm 1) Need a project that contains 4 different subsystems? 2) What type of subsystem are we most confortable with? 3) What can be easy and interactive?</p>"},{"location":"Ideation_and_Concept/#design-concept","title":"Design concept:","text":"<p>Similar project: String machine</p> <p></p> <p>Our exhibit will be of the interactive type, encouraging visitors to control the input of a motor by varying speed via a microphone. This will demonstrate the causal relationship of tonality of sound to the output of a standing wave. Natural learning by association will take place due to the instant and comparative feedback. A loud low sound input into the microphone will produce a longer period wave with a taller amplitude wave on the string. </p> <p>We decided on our design for the project by looking through how we had ordered the ideas we brainstormed and picked ideas out that both worked well together and that interested us. When we were selecting ideas, one of our group members had found a product that was some what similar to the idea we are going with currently. When we had looked at the ideas we liked and looked at this other project, we came up with a way that we could make somethinbg similar that met the requirements needed for this class while also creating a fun and interactive design for the audience we are intending to reach.</p> <p>Our goal for demonstration is to simply demonstrate the physical properties of waves based on sound input, or a preset input. Considering our audience is in the range of K-12, the interface for them to interact is via microphone or pushbutton. Children are born into this world with the gift of vocalization and use it judiciously to interact with the world around them, so this exhibit aims to let them connect their speech to the physical properties of waves. For those born mute, we include pushbuttons to generate specific frequencies to allow a reliable and fair type of interaction. The microphone will be secured in a bright visually appealing plastic container. The push buttons will be large and comfortable for child-hands. The device will be enclosed in a secure aluminum project box with rounded edges. All external device wiring will be enclosed in insulated wiring harness hose wrap, and physically secured to the display. The rotating portion will be set back far enough away from participants that they would have to jump into the display to become injured. </p> <p>A sample of potential audience members will be interviewed to discern their understanding of sound waves, what draws them to the topic, and what they do not understand. Misconceptions of wave physics can be addressed directly with small placards or notes providing more in-depth information. Furthermore, very obvious labeling will be added to the system to define the use of the pushbuttons, encourage the use of the microphone, define meaning of the string fluctuation, and explain the information presented via web interface. </p> <p>Functionality will be divided across the four teammates as follows:  - Zach: Actuator Controlled Outputs  - Carter: Sensor Controlled Inputs and Processing  - Sivanee: Human Machine Interface via buttons and visual output screen  - Brendan: Internet based two-way communication protocol. </p> <p>Presentation URL: </p>"},{"location":"Innovation%20Showcase%20Poster/","title":"Innovation Showcase Poster","text":"<p>Innovation Showcase Poster Submission.pdf</p>"},{"location":"Reflection/","title":"Reflection","text":""},{"location":"Reflection/#lessons-learned","title":"Lessons Learned","text":"<ol> <li> <p>We should always read the component datasheets thoroughly before making any purchases to ensure compatibility and avoid costly mistakes.</p> </li> <li> <p>We discovered that setting the silk screen clearance to 0.1 mils is crucial for successful PCB fabrication.</p> </li> <li> <p>Working with ESP32 microcontrollers proved to be both enjoyable and highly productive for rapid prototyping.</p> </li> <li> <p>Reinforcing Ohm\u2019s Law\u2014voltage equals current times resistance\u2014helped us diagnose circuit issues more effectively.</p> </li> <li> <p>Implementing a structured message-passing system significantly simplified data communication between modules.</p> </li> <li> <p>We learned that supply voltages can fluctuate based on the outlet and environment, so our regulator designs must accommodate these variations.</p> </li> <li> <p>Individually testing every component before full system integration prevented cascading failures and saved debugging time.</p> </li> <li> <p>We recognized that engineering is fundamentally about systematic problem solving and iterative improvement.</p> </li> <li> <p>Including test points at every critical node on the PCB made signal measurement and fault isolation much easier.</p> </li> <li> <p>Labeling every I/O pin on the board with a clear pinout diagram proved invaluable when unexpected wiring needs arose.</p> </li> </ol>"},{"location":"Reflection/#recommendations-for-future-students","title":"Recommendations for future students","text":"<ol> <li> <p>This class is entirely focused on problem solving, so be prepared to encounter and overcome new challenges continuously.</p> </li> <li> <p>Expect to invest significantly more time in this course than in a typical three-unit class due to its hands-on nature.</p> </li> <li> <p>Review weekly assignments and milestones well in advance and avoid leaving all work until the night before deadlines.</p> </li> <li> <p>Use JLCPCB for your board fabrication because of its affordability, fast turnaround, and reliable quality.</p> </li> <li> <p>Start developing and testing your message-passing infrastructure early, even if your PCBs have not yet arrived.</p> </li> </ol>"},{"location":"Reflection/#version-20","title":"Version 2.0","text":"<p>To avoid last\u2010minute crunches, we would establish hard deadlines for each major deliverable\u2014message protocol definition, software driver stub, PCB layout, and integration test. Each deadline would carry a simple consequence for the team, such as shifting noncritical scope items to a later sprint, so everyone understands the trade-offs of missing a milestone. To keep us honest, we would designate a \u201cscrum master\u201d or leading voice whose sole responsibility is to send twice-weekly reminders and to call out approaching deadlines in our group chat. Finally, we would require that the core message\u2010passing routines be fully implemented and unit\u2010tested before the boards arrive, so software and hardware integration can begin immediately once PCBs are populated.</p> <p>Debug : Use of a hardware logic\u2010analyzer header exposing TX, RX, CTS, and RTS signals so that we can monitor traffic in real time. A simple heartbeat LED on the board that blinks green when the link is healthy and red if a CRC or sequence error is detected.</p> <p>By combining disciplined project management\u2014strict deadlines, clear ownership, and early software completion\u2014with a more modular, feature-rich communication stack and improved hardware support, Version 2.0 of our architecture would be far more reliable, maintainable, and scalable for future classes and projects.</p>"},{"location":"Resources/","title":"Resources","text":""},{"location":"Resources/#zacks-subsystem","title":"Zacks Subsystem","text":"<p>need cad files</p>"},{"location":"Team%20Organization/","title":"Team Organization","text":""},{"location":"Team%20Organization/#team-organization","title":"Team Organization:","text":""},{"location":"Team%20Organization/#charter-statement","title":"Charter Statement:","text":"<p>Our team\u2019s charter statement reflects the shared goals and aspirations we developed through collaborative discussions about the purpose and direction of our project. </p> <p>After a focused 10-minute session to define our objectives, we identified key success metrics that go beyond achieving an academic grade. These goals serve as the foundation for our work and ensure alignment with our personal and professional aspirations.</p>"},{"location":"Team%20Organization/#team-charter-statement","title":"Team Charter Statement:","text":"<p>As a team of third-year engineering students in EGR314, our primary mission is to design and build a reliable, interactive educational product that engages K\u20138 students in understanding sound waves through hands-on exploration. Our product\u2014the String Machine\u2014translates children's voice pitch into a visual and physical string vibration using microphone input, stepper motors, and embedded control logic. While the course provides a structured foundation, our goals extend well beyond the grade.</p> <p>We believe a successful outcome includes:</p> <ol> <li>Creating a fully functional, robust physical prototype that performs real-time pitch detection and mechanical wavelength generation accurately and consistently.</li> <li>Designing for audience impact, ensuring the system is intuitive and engaging for children, educators, and informal science settings such as museums or STEM fairs.</li> <li>Building a strong technical portfolio piece that each team member can showcase in future job interviews, internship applications, or graduate school portfolios.</li> <li>Mastering embedded systems integration through practical use of UART, SPI, PCB design, and sensor-motor interfacing\u2014developing real-world engineering skills through iteration.</li> <li>Demonstrating collaborative engineering practices, including documentation, Git version control, project management (e.g., Gantt tracking), and professional communication.</li> </ol> <p>Ultimately, our team sees this experience as a springboard into our careers. Whether in robotics, mechatronics, or STEM outreach, this project allows us to strengthen both our technical abilities and our ability to work as a cohesive team on a multidisciplinary engineering challenge. We aim not only to fulfill the course requirements but to produce something we are proud to exhibit publicly and refine beyond the semester.</p>"},{"location":"Team%20Organization/#roles-and-responsibilities","title":"Roles and Responsibilities","text":"<p>We commit to designing and delivering a product that not only fulfills the requirements of the course but also exemplifies our collective dedication to innovation, precision, and impactful problem-solving. Our aim is to enhance our engineering expertise, create a portfolio-worthy design, and contribute meaningfully to the field of scientific exploration.</p> <p>To ensure effective team coordination and equitable contribution, we have defined key roles based on Table 2 and added one additional technical role specific to our project\u2019s needs. The roles are initially assigned but will rotate periodically so that each member gains experience in various aspects of project execution.</p>"},{"location":"Team%20Organization/#table-2-project-roles-and-duties","title":"Table 2: Project Roles and Duties","text":"Role Duties Initial Member Meeting Leader Schedules team meetings, creates and distributes an agenda for each meeting, and runs meetings Brendan Meeting Recorder Takes meeting minutes, tracks attendance, and records assigned action items Brendan Assignment Leader Coordinates the team's work on assignments and ensures submission to Canvas on time Carter Project Monitor Tracks the team's progress relative to the Gantt chart and reminds members of deadlines Zack Technical Integrator Oversees integration of hardware and software components and manages testing/debugging Zack"},{"location":"Team%20Organization/#process-for-role-assignment-and-rotation","title":"Process for Role Assignment and Rotation","text":"<ul> <li> <p>Role Rotation Frequency: Project roles will be rotated every 2\u20133 weeks or after each major milestone, ensuring all members gain experience with different leadership and coordination duties.</p> </li> <li> <p>Role Assignment Method: Roles will be initially assigned based on each member\u2019s strengths and preferences. Role changes will be discussed and agreed upon as a team during weekly meetings.</p> </li> <li> <p>Team Support: Team members are expected to assist each other in meeting their responsibilities, especially when one member is overloaded or encounters technical obstacles. Collaboration and open communication will be emphasized to maintain momentum.</p> </li> <li> <p>Adjusting Roles: If a team member is unable to fulfill their role due to schedule conflicts or project scope changes, the team will reassign roles during a meeting through open discussion and consensus.</p> </li> <li> <p>Tracking Progress: The Project Monitor will maintain and update the Gantt chart and weekly task tracker (Google Sheets), which will be reviewed during meetings to ensure we\u2019re on track. We will also use a shared team drive to organize deliverables and version control for code and schematics.</p> </li> <li> <p>Technical Task Assignment: Technical responsibilities will be divided based on prior experience and interest. For example, one member may lead microcontroller programming while another focuses on PCB layout or sensor integration. Tasks will be documented and agreed upon in team meetings, with progress shared during weekly check-ins.</p> </li> </ul>"},{"location":"Team%20Organization/#supporting-context","title":"Supporting Context:","text":"<p>Through open and candid discussions, we recognized that our success is best measured by more than just academic performance. By identifying shared ambitions\u2014such as demonstrating engineering proficiency, creating a tangible addition to our portfolios, and fostering professional growth\u2014we ensured our charter aligns with both immediate project goals and our long-term career objectives. Each team member contributed to shaping the charter, making it a reflection of our unified vision.</p>"},{"location":"Team%20Organization/#product-mission-statement","title":"Product Mission Statement:","text":"<p>The product mission statement defines the distilled purpose and function of the scientific device we aim to create. While our project is still in its early stages, we leveraged our initial brainstorming to outline the key purpose of our product: to prove a scientific theory effectively and meaningfully.</p> <p>Our mission is to design an innovative and reliable device that validates a scientific theory through precise data collection and analysis. This product will be accessible, robust, and demonstrative of cutting-edge engineering solutions, showcasing our ability to integrate complex concepts into practical applications.</p>"},{"location":"Team%20Organization/#supporting-context_1","title":"Supporting Context:","text":"<p>As a team, we aligned on the importance of creating a product that serves a clear and impactful purpose. Our discussions emphasized leveraging each member\u2019s strengths to ensure the product\u2019s reliability and usability. By focusing on accessibility and precision, we aim to produce a tool that not only meets the academic expectations of this course but also resonates with real-world scientific and engineering standards.</p>"},{"location":"Block%20Diagram%2C%20Process%20Diagram%2C%20and%20Message%20Structure/Block_Diagram/","title":"Block Diagram","text":""},{"location":"Block%20Diagram%2C%20Process%20Diagram%2C%20and%20Message%20Structure/Block_Diagram/#team-block-diagram","title":"Team Block Diagram","text":""},{"location":"Block%20Diagram%2C%20Process%20Diagram%2C%20and%20Message%20Structure/Communication_Process/","title":"Communication Process Diagram","text":"<pre><code>\nsequenceDiagram\n    actor W as WebUser\n    participant Brendan\n    participant Zack\n    participant Carter\n  actor I as In-Person User\n\n    I-&gt;&gt;Carter: Voice input to microphone\n    Carter-&gt;&gt;Zack: Sends pitch info\n    Carter-&gt;&gt;Brendan: Sends pitch info\n    Brendan -&gt;&gt; Carter: Sends pitch inquiry\n    Zack-&gt;&gt;Carter: Sends pitch inquiry\n    Zack-&gt;&gt;Brendan: Relays pitch data in visual form\n    Brendan-&gt;&gt;Carter: Pitch Up/Down Correct\n    Zack-&gt;&gt;I: Output motor imitation pitch\n\nBrendan -&gt;&gt; W: Sends target pitch to web</code></pre>"},{"location":"Block%20Diagram%2C%20Process%20Diagram%2C%20and%20Message%20Structure/Message_Types/","title":"Message Types","text":""},{"location":"Block%20Diagram%2C%20Process%20Diagram%2C%20and%20Message%20Structure/Message_Types/#message-types-diagram","title":"Message Types Diagram","text":"<p>This page is to show messages and message types between team members</p> <p>Overall Example code: [AZ][SENDERID][RECEIVERID][MESSAGETYPE][VALUE][YB]</p>"},{"location":"Block%20Diagram%2C%20Process%20Diagram%2C%20and%20Message%20Structure/Message_Types/#parts","title":"Parts","text":"<p>[AZ]: This is the start of the message. This tells the the controller to start reading the message, all messages needs this to be read. NEEDS TO BE IN HEX (0x41)(0x5A)</p> <p>[SENDERID]: This helps others see who sent the message. </p> Teammates SENDER ID Type Zack Z Hex (0x5A) Brendan B Hex (0x42) Carter C Hex (0x43) <p>[RECEIVERID]: This helps others see who needs to receive the message. </p> Teammates RECEIVER ID Type Zack Z Hex (0x5A) Brendan B Hex (0x42) Carter C Hex (0x43) Everyone E Hex (0x45) <p>[Message type]: Shows what the value is going to be for. Message type is a hex (1-4)</p> Message Types Values Type Motor Freq 1 0x31 Motor on/off 3 0x32 System off 4 0x34 Error 6 0x33 <p>[Value]: Shows the value for the message type that is sending through (Values are based what the message type is. This messages are in hex (0-256).</p> Message Types Values Type Motor Freq 0-255 0x30 - 0xFF Motor on/off 0-1 0x30-0x31 System off 0-1 0x30-0x31 Sensor Error 0-6 0x30-0x35 Motor Error 0-6 0x30-0x35 Mqtt Error 0-6 0x30-0x35 <p>[Error tpye]</p> Error Type Value Wrong Start of message 0x30 Wrong sender 0x31 Wrong reciever 0x32 Wrong message type 0x33 Wrong message value 0x34 Wrong End of message 0x35 <p>[YB]: This is the end of the message. This tells the the controller to stop reading the message, all messages needs this to be read. NEEDS TO BE IN HEX (0x59)(0x42)</p> Message Type Message ID  (uint8_t) Carter Role: Sensor; ID: C Zack Role: Motor; ID: Z Brenden Role Web; ID: B Pitch Value 0x31 S (reads sound) R (Motor reacts) R (mqtt topic:/ EGR314/TEAM2/PITCH) Motor on or off 0x33 - R (motor spins) S (mqtt topic: /EGR314/TEAM203/MOTORON System off 0x34 R (turn off sensor) R (Turn motor off ) S mqtt topic: /EGR314/TEAM203/OFF Sensor Error 0x35 S (message error) R (remove motor SPI ) R mqtt topic: /EGR314/TEAM203/SENSORERROR Motor Error 0x36 R (disconnect sensor) S (message error ) R mqtt topic: /EGR314/TEAM203/MOTORERROR Mqtt Error 0x37 - - R mqtt topic: /EGR314/TEAM203/MQTTERROR <p>Table</p> Item Meaning S Sends the message R Receives - Do nothing, pass through"},{"location":"static/node_modules/mathjax/","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#beautiful-math-in-all-browsers","title":"Beautiful math in all browsers","text":"<p>MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.  It was designed with the goal of consolidating the recent advances in web technologies into a single, definitive, math-on-the-web platform supporting the major browsers and operating systems.  It requires no setup on the part of the user (no plugins to download or software to install), so the page author can write web documents that include mathematics and be confident that users will be able to view it naturally and easily.  Simply include MathJax and some mathematics in a web page, and MathJax does the rest.</p> <p>Some of the main features of MathJax include:</p> <ul> <li> <p>High-quality display of LaTeX, MathML, and AsciiMath notation in HTML pages</p> </li> <li> <p>Supported in most browsers with no plug-ins, extra fonts, or special   setup for the reader</p> </li> <li> <p>Easy for authors, flexible for publishers, extensible for developers</p> </li> <li> <p>Supports math accessibility, cut-and-paste interoperability, and other   advanced functionality</p> </li> <li> <p>Powerful API for integration with other web applications</p> </li> </ul> <p>See http://www.mathjax.org/ for additional details about MathJax, and https://docs.mathjax.org for the MathJax documentation.</p>"},{"location":"static/node_modules/mathjax/#mathjax-components","title":"MathJax Components","text":"<p>MathJax version 3 uses files called components that contain the various MathJax modules that you can include in your web pages or access on a server through NodeJS.  Some components combine all the pieces you need to run MathJax with one or more input formats and a particular output format, while other components are pieces that can be loaded on demand when needed, or by a configuration that specifies the pieces you want to combine in a custom way.  For usage instructions, see the MathJax documentation.</p> <p>Components provide a convenient packaging of MathJax's modules, but it is possible for you to form your own custom components, or to use MathJax's modules directly in a node application on a server.  There are web examples showing how to use MathJax in web pages and how to build your own components, and node examples illustrating how to use components in node applications or call MathJax modules directly.</p>"},{"location":"static/node_modules/mathjax/#whats-in-this-repository","title":"What's in this Repository","text":"<p>This repository contains only the component files for MathJax, not the source code for MathJax (which are available in a separate MathJax source repository).  These component files are the ones served by the CDNs that offer MathJax to the web.  In version 2, the files used on the web were also the source files for MathJax, but in version 3, the source files are no longer on the CDN, as they are not what are run in the browser.</p> <p>The components are stored in the <code>es5</code> directory, and are in ES5 format for the widest possible compatibility.  In the future, we may make an <code>es6</code> directory containing ES6 versions of the components.</p>"},{"location":"static/node_modules/mathjax/#installation-and-use","title":"Installation and Use","text":""},{"location":"static/node_modules/mathjax/#using-mathjax-components-from-a-cdn-on-the-web","title":"Using MathJax components from a CDN on the web","text":"<p>If you are loading MathJax from a CDN into a web page, there is no need to install anything.  Simply use a <code>script</code> tag that loads MathJax from the CDN.  E.g.,</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>See the MathJax documentation, the MathJax Web Demos, and the MathJax Component Repository for more information.</p>"},{"location":"static/node_modules/mathjax/#hosting-your-own-copy-of-the-mathjax-components","title":"Hosting your own copy of the MathJax Components","text":"<p>If you want to host MathJax from your own server, you can do so by installing the <code>mathjax</code> package using <code>npm</code> and moving the <code>es5</code> directory to an appropriate location on your server:</p> <pre><code>npm install mathjax@3\nmv node_modules/mathjax/es5 &lt;path-to-server-location&gt;/mathjax\n</code></pre> <p>Note that we are still making updates to version 2, so include <code>@3</code> when you install, since the latest chronological version may not be version 3.</p> <p>Alternatively, you can get the files via GitHub:</p> <pre><code>git clone https://github.com/mathjax/MathJax.git mj-tmp\nmv mj-tmp/es5 &lt;path-to-server-location&gt;/mathjax\nrm -rf mj-tmp\n</code></pre> <p>Then (in either case) you can use a script tag like the following:</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"&lt;url-to-your-site&gt;/mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>where <code>&lt;url-to-your-site&gt;</code> is replaced by the URL to the location where you moved the MathJax files above.</p> <p>See the documentation for details.</p>"},{"location":"static/node_modules/mathjax/#using-mathjax-components-in-a-node-application","title":"Using MathJax components in a node application","text":"<p>To use MathJax components in a node application, install the <code>mathjax</code> package:</p> <pre><code>npm install mathjax@3\n</code></pre> <p>(we are still making updates to version 2, so you should include <code>@3</code> since the latest chronological version may not be version 3).</p> <p>Then require <code>mathjax</code> within your application:</p> <pre><code>require('mathjax').init({ ... }).then((MathJax) =&gt; { ... });\n</code></pre> <p>where the first <code>{ ... }</code> is a MathJax configuration, and the second <code>{ ... }</code> is the code to run after MathJax has been loaded.  E.g.</p> <pre><code>require('mathjax').init({\nloader: {load: ['input/tex', 'output/svg']}\n}).then((MathJax) =&gt; {\nconst svg = MathJax.tex2svg('\\\\frac{1}{x^2-1}', {display: true});\nconsole.log(MathJax.startup.adaptor.outerHTML(svg));\n}).catch((err) =&gt; console.log(err.message));\n</code></pre> <p>Note: this technique is for node-based application only, not for browser applications.  This method sets up an alternative DOM implementation, which you don't need in the browser, and tells MathJax to use node's <code>require()</code> command to load external modules.  This setup will not work properly in the browser, even if you webpack it or bundle it in other ways.</p> <p>See the documentation and the MathJax Node Repository for more details.</p>"},{"location":"static/node_modules/mathjax/#reducing-the-size-of-the-components-directory","title":"Reducing the Size of the Components Directory","text":"<p>Since the <code>es5</code> directory contains all the component files, so if you are only planning one use one configuration, you can reduce the size of the MathJax directory by removing unused components. For example, if you are using the <code>tex-chtml.js</code> component, then you can remove the <code>tex-mml-chtml.js</code>, <code>tex-svg.js</code>, <code>tex-mml-svg.js</code>, <code>tex-chtml-full.js</code>, and <code>tex-svg-full.js</code> configurations, which will save considerable space.  Indeed, you should be able to remove everything other than <code>tex-chtml.js</code>, and the <code>input/tex/extensions</code>, <code>output/chtml/fonts/woff-v2</code>, <code>adaptors</code>, <code>a11y</code>, and <code>sre</code> directories.  If you are using the results only on the web, you can remove <code>adaptors</code> as well.</p> <p>If you are not using A11Y support (e.g., speech generation, or semantic enrichment), then you can remove <code>a11y</code> and <code>sre</code> as well (though in this case you may need to disable the assistive tools in the MathJax contextual menu in order to avoid MathJax trying to load them when they aren't there).</p> <p>If you are using SVG rather than CommonHTML output (e.g., <code>tex-svg.js</code> rather than <code>tex-chtml.js</code>), you can remove the <code>output/chtml/fonts/woff-v2</code> directory.  If you are using MathML input rather than TeX (e.g., <code>mml-chtml.js</code> rather than <code>tex-chtml.js</code>), then you can remove <code>input/tex/extensions</code> as well.</p>"},{"location":"static/node_modules/mathjax/#the-component-files-and-pull-requests","title":"The Component Files and Pull Requests","text":"<p>The <code>es5</code> directory is generated automatically from the contents of the MathJax source repository.  You can rebuild the components using the command</p> <pre><code>npm run make-es5 --silent\n</code></pre> <p>Note that since the contents of this repository are generated automatically, you should not submit pull requests that modify the contents of the <code>es5</code> directory.  If you wish to submit a modification to MathJax, you should make a pull request in the MathJax source repository.</p>"},{"location":"static/node_modules/mathjax/#mathjax-community","title":"MathJax Community","text":"<p>The main MathJax website is http://www.mathjax.org, and it includes announcements and other important information.  A MathJax user forum for asking questions and getting assistance is hosted at Google, and the MathJax bug tracker is hosted at GitHub.</p> <p>Before reporting a bug, please check that it has not already been reported.  Also, please use the bug tracker (rather than the help forum) for reporting bugs, and use the user's forum (rather than the bug tracker) for questions about how to use MathJax.</p>"},{"location":"static/node_modules/mathjax/#mathjax-resources","title":"MathJax Resources","text":"<ul> <li>MathJax Documentation</li> <li>MathJax Components</li> <li>MathJax Source Code</li> <li>MathJax Web Examples</li> <li>MathJax Node Examples</li> <li>MathJax Bug Tracker</li> <li>MathJax Users' Group</li> </ul>"},{"location":"subfolder/","title":"Index","text":"<p>Members: </p>"},{"location":"subfolder/another-subfile/","title":"This is a secondary sub page","text":"<p>Things to discuss</p>"}]}